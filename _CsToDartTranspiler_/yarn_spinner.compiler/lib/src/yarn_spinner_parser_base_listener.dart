//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

import 'package:yarn_spinner.compiler.framework/src/yarn_spinner_parser.dart';
import 'package:yarn_spinner.compiler.framework/src/yarn_spinner_parser_listener.dart';

// Generated from /Users/desplesda/Work/yarnspinner/YarnSpinner.Compiler/YarnSpinnerParser.g4 by ANTLR 4.8

// Unreachable code detected
// The variable '...' is assigned but its value is never used
// Missing XML comment for publicly visible type or member '...'
// Ambiguous reference in cref attribute


class YarnSpinnerParserBaseListener implements IYarnSpinnerParserListener {
  @override
  void enterDialogue(DialogueContext context) {
  }
  @override
  void exitDialogue(DialogueContext context) {
  }
  @override
  void enterFile_hashtag(File_hashtagContext context) {
  }
  @override
  void exitFile_hashtag(File_hashtagContext context) {
  }
  @override
  void enterNode(NodeContext context) {
  }
  @override
  void exitNode(NodeContext context) {
  }
  @override
  void enterHeader(HeaderContext context) {
  }
  @override
  void exitHeader(HeaderContext context) {
  }
  @override
  void enterBody(BodyContext context) {
  }
  @override
  void exitBody(BodyContext context) {
  }
  @override
  void enterStatement(StatementContext context) {
  }
  @override
  void exitStatement(StatementContext context) {
  }
  @override
  void enterLine_statement(Line_statementContext context) {
  }
  @override
  void exitLine_statement(Line_statementContext context) {
  }
  @override
  void enterLine_formatted_text(Line_formatted_textContext context) {
  }
  @override
  void exitLine_formatted_text(Line_formatted_textContext context) {
  }
  @override
  void enterHashtag(HashtagContext context) {
  }
  @override
  void exitHashtag(HashtagContext context) {
  }
  @override
  void enterLine_condition(Line_conditionContext context) {
  }
  @override
  void exitLine_condition(Line_conditionContext context) {
  }
  @override
  void enterExpParens(ExpParensContext context) {
  }
  @override
  void exitExpParens(ExpParensContext context) {
  }
  @override
  void enterExpMultDivMod(ExpMultDivModContext context) {
  }
  @override
  void exitExpMultDivMod(ExpMultDivModContext context) {
  }
  @override
  void enterExpComparison(ExpComparisonContext context) {
  }
  @override
  void exitExpComparison(ExpComparisonContext context) {
  }
  @override
  void enterExpNegative(ExpNegativeContext context) {
  }
  @override
  void exitExpNegative(ExpNegativeContext context) {
  }
  @override
  void enterExpAndOrXor(ExpAndOrXorContext context) {
  }
  @override
  void exitExpAndOrXor(ExpAndOrXorContext context) {
  }
  @override
  void enterExpAddSub(ExpAddSubContext context) {
  }
  @override
  void exitExpAddSub(ExpAddSubContext context) {
  }
  @override
  void enterExpNot(ExpNotContext context) {
  }
  @override
  void exitExpNot(ExpNotContext context) {
  }
  @override
  void enterExpValue(ExpValueContext context) {
  }
  @override
  void exitExpValue(ExpValueContext context) {
  }
  @override
  void enterExpEquality(ExpEqualityContext context) {
  }
  @override
  void exitExpEquality(ExpEqualityContext context) {
  }
  @override
  void enterValueNumber(ValueNumberContext context) {
  }
  @override
  void exitValueNumber(ValueNumberContext context) {
  }
  @override
  void enterValueTrue(ValueTrueContext context) {
  }
  @override
  void exitValueTrue(ValueTrueContext context) {
  }
  @override
  void enterValueFalse(ValueFalseContext context) {
  }
  @override
  void exitValueFalse(ValueFalseContext context) {
  }
  @override
  void enterValueVar(ValueVarContext context) {
  }
  @override
  void exitValueVar(ValueVarContext context) {
  }
  @override
  void enterValueString(ValueStringContext context) {
  }
  @override
  void exitValueString(ValueStringContext context) {
  }
  @override
  void enterValueNull(ValueNullContext context) {
  }
  @override
  void exitValueNull(ValueNullContext context) {
  }
  @override
  void enterValueFunc(ValueFuncContext context) {
  }
  @override
  void exitValueFunc(ValueFuncContext context) {
  }
  @override
  void enterVariable(VariableContext context) {
  }
  @override
  void exitVariable(VariableContext context) {
  }
  @override
  void enterFunction_call(Function_callContext context) {
  }
  @override
  void exitFunction_call(Function_callContext context) {
  }
  @override
  void enterIf_statement(If_statementContext context) {
  }
  @override
  void exitIf_statement(If_statementContext context) {
  }
  @override
  void enterIf_clause(If_clauseContext context) {
  }
  @override
  void exitIf_clause(If_clauseContext context) {
  }
  @override
  void enterElse_if_clause(Else_if_clauseContext context) {
  }
  @override
  void exitElse_if_clause(Else_if_clauseContext context) {
  }
  @override
  void enterElse_clause(Else_clauseContext context) {
  }
  @override
  void exitElse_clause(Else_clauseContext context) {
  }
  @override
  void enterSet_statement(Set_statementContext context) {
  }
  @override
  void exitSet_statement(Set_statementContext context) {
  }
  @override
  void enterCall_statement(Call_statementContext context) {
  }
  @override
  void exitCall_statement(Call_statementContext context) {
  }
  @override
  void enterCommand_statement(Command_statementContext context) {
  }
  @override
  void exitCommand_statement(Command_statementContext context) {
  }
  @override
  void enterCommand_formatted_text(Command_formatted_textContext context) {
  }
  @override
  void exitCommand_formatted_text(Command_formatted_textContext context) {
  }
  @override
  void enterShortcut_option_statement(Shortcut_option_statementContext context) {
  }
  @override
  void exitShortcut_option_statement(Shortcut_option_statementContext context) {
  }
  @override
  void enterShortcut_option(Shortcut_optionContext context) {
  }
  @override
  void exitShortcut_option(Shortcut_optionContext context) {
  }
  @override
  void enterDeclare_statement(Declare_statementContext context) {
  }
  @override
  void exitDeclare_statement(Declare_statementContext context) {
  }
  @override
  void enterJump_statement(Jump_statementContext context) {
  }
  @override
  void exitJump_statement(Jump_statementContext context) {
  }

  /// <inheritdoc
  void enterEveryRule(ParserRuleContext context) {
  }
  /// <inheritdoc
  void exitEveryRule(ParserRuleContext context) {
  }
  /// <inheritdoc
  void visitTerminal(ITerminalNode node) {
  }
  /// <inheritdoc
  void visitErrorNode(IErrorNode node) {
  }
}
// namespace Yarn.Compiler
